{
  "config": {
    "step": {
      "user": {
        "title": "ABB-free@home - Configure",
        "description": "Enter the hostname/ip address (with schema, e.g. http://), username, and password of your ABB-free@home SysAP to integrate with Home Assistant.",
        "data": {
          "host": "[%key:common::config_flow::data::host%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "include_orphan_channels": "Include channels NOT on the ABB-free@home floorplan?"
        }
      },
      "zeroconf_confirm": {
        "title": "ABB-free@home - Confirm",
        "description": "Do you want to set up {name} ({serial}) at {host}?",
        "data": {
          "host": "[%key:common::config_flow::data::host%]",
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "include_orphan_channels": "Include channels NOT on the ABB-free@home floorplan?"
        }
      },
      "reconfigure": {
        "title": "ABB-free@home - Reconfigure",
        "description": "Do you want reconfigure {name} ({serial}) at {host}?",
        "data": {
          "username": "[%key:common::config_flow::data::username%]",
          "password": "[%key:common::config_flow::data::password%]",
          "include_orphan_channels": "Include channels NOT on the ABB-free@home floorplan?"
        }
      }
    },
    "error": {
      "cannot_connect": "[%key:common::config_flow::error::cannot_connect%]",
      "invalid_auth": "[%key:common::config_flow::error::invalid_auth%]",
      "unknown": "[%key:common::config_flow::error::unknown%]",
      "unsupported_sysap_version": "The current version {sysap_version} of the SysAP is not supported. Only version 2.6.0 or newer is supported."
    },
    "abort": {
      "already_configured": "[%key:common::config_flow::abort::already_configured_device%]",
      "already_in_progress": "[%key:common::config_flow::abort::already_in_progress%]",
      "reauth_successful": "[%key:common::config_flow::abort::reauth_successful%]",
      "reconfigure_successful": "[%key:common::config_flow::abort::reconfigure_successful%]",
      "reconfigure_not_supported": "Reconfigure for this integration is only supported on Home Assistant version 2024.11.0 or newer."
    }
  },
  "entity": {
    "binary_sensor": {
      "brightness_sensor": {
        "name": "Brightness Alarm"
      },
      "carbon_monoxide_sensor": {
        "name": "[%key:component::binary_sensor::entity_component::carbon_monoxide::name%]"
      },
      "movement_detector_motion": {
        "name": "[%key:component::binary_sensor::entity_component::motion::name%]"
      },
      "rain_sensor": {
        "name": "Rain Alarm"
      },
      "smoke_detector": {
        "name": "[%key:component::binary_sensor::entity_component::smoke::name%]"
      },
      "temperature_sensor": {
        "name": "Frost Alarm"
      },
      "wind_sensor": {
        "name": "Wind Alarm"
      },
      "window_door": {
        "name": "[%key:component::binary_sensor::entity_component::window::name%]"
      }
    },
    "event": {
      "blind_sensor": {
        "name": "Blind Event ({channel_id})",
        "state_attributes": {
          "event_type": {
            "state": {
              "unknown": "Unknown",
              "step_up": "Step Up/Stop",
              "step_down": "Step Down/Stop",
              "move_up": "Move Up",
              "move_down": "Move Down"
            }
          }
        }
      },
      "des_door_ringing_sensor": {
        "state_attributes": {
          "event_type": {
            "state": {
              "activated": "Activated"
            }
          }
        }
      },
      "dimming_sensor": {
        "name": "Dimming Event ({channel_id})",
        "state_attributes": {
          "event_type": {
            "state": {
              "unknown": "Unknown",
              "on": "[%key:common::state::on%]",
              "off": "[%key:common::state::off%]",
              "longpress_up": "Dimming Up",
              "longpress_up_release": "Dimming Up Release",
              "longpress_down": "Dimming Down",
              "longpress_down_release": "Dimming Down Release"
            }
          }
        }
      },
      "force_on_off_sensor": {
        "name": "Force Event ({channel_id})",
        "state_attributes": {
          "event_type": {
            "state": {
              "unknown": "Unknown",
              "on": "[%key:common::state::on%]",
              "off": "[%key:common::state::off%]"
            }
          }
        }
      },
      "switch_sensor": {
        "name": "Switch Event ({channel_id})",
        "state_attributes": {
          "event_type": {
            "state": {
              "unknown": "Unknown",
              "on": "[%key:common::state::on%]",
              "off": "[%key:common::state::off%]"
            }
          }
        }
      }
    },
    "select": {
      "cover_actuator": {
        "name": "{channel_name} Forced Position",
        "state": {
          "deactivated": "Deactivated",
          "forced_open": "[%key:common::state::open%]",
          "forced_closed": "[%key:common::state::closed%]"
        }
      },
      "dimming_actuator": {
        "name": "{channel_name} Forced Position",
        "state": {
          "deactivated": "Deactivated",
          "forced_on": "[%key:common::state::on%]",
          "forced_off": "[%key:common::state::off%]"
        }
      },
      "switch_actuator": {
        "name": "{channel_name} Forced Position",
        "state": {
          "deactivated": "Deactivated",
          "forced_on": "[%key:common::state::on%]",
          "forced_off": "[%key:common::state::off%]"
        }
      }
    },
    "sensor": {
      "brightness_sensor": {
        "name": "[%key:component::sensor::entity_component::illuminance::name%]"
      },
      "movement_detector_brightness": {
        "name": "[%key:component::sensor::entity_component::illuminance::name%]"
      },
      "temperature_sensor": {
        "name": "[%key:component::sensor::entity_component::temperature::name%]"
      },
      "wind_sensor_speed": {
        "name": "[%key:component::sensor::entity_component::wind_speed::name%]"
      },
      "wind_sensor_force": {
        "name": "Wind Force"
      },
      "window_position": {
        "name": "Window Position",
        "state": {
          "unknown": "Unknown",
          "closed": "[%key:common::state::closed%]",
          "tilted": "Tilted",
          "open": "[%key:common::state::open%]"
        }
      }
    }
  }
}
